name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ
on: [push]
jobs:
  docker-build:
    runs-on: ubuntu-latest
    # steps:
    #   - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
    #   - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
    #   - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
    #   - name: Check out repository code
    #     uses: actions/checkout@v4
    #   - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
    #   - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
    #   - name: List files in the repository
    #     run: |
    #       ls ${{ github.workspace }}
    #   - run: echo "üçè This job's status is ${{ job.status }}."
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./spring-boot-docker
          file: spring-boot-docker/Dockerfile
          push: true
          tags: jigsthegreat/test1:latest

      - name: Run playbook
        uses: dawidd6/action-ansible-playbook@v2
        with:
          # Required, playbook filepath
          playbook: deployapp.yml
          # Optional, directory where playbooks live
          directory: ./spring-boot-docker/ansible
          # Optional, ansible configuration file content (ansible.cfg)
          # configuration: |
          #   [defaults]
          #   callbacks_enabled = ansible.posix.profile_tasks, ansible.posix.timer
          #   stdout_callback = yaml
          #   nocows = false
          # Optional, SSH private key
          key: ${{secrets.SSH_PRIVATE_KEY}}
          # Optional, literal inventory file contents
          inventory: |
            [aws]
            13.229.86.127 ansible_user=ubuntu
          # # Optional, SSH known hosts file content
          # known_hosts: |
          #   example.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl
          # # Optional, encrypted vault password
          # vault_password: ${{secrets.VAULT_PASSWORD}}
          # # Optional, galaxy requirements filepath
          # requirements: galaxy-requirements.yml
          # # Optional, additional flags to pass to ansible-playbook
          # options: |
          #   --inventory .hosts
          #   --limit group1
          #   --extra-vars hello=there
          #   --verbose