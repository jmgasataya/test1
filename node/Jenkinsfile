pipeline {
  agent any

  stages {
    stage('docker-build') {
      steps {
        sh 'cd node && docker build -t jigsthegreat/test1 .'
      }
    }

    stage('docker-push') {
      steps {
        withCredentials([string(credentialsId: 'DOCKERHUB_PW', variable: 'DOCKERHUB_PW')]) {
          sh 'docker login -u jigsthegreat -p ${DOCKERHUB_PW} && \
              docker push jigsthegreat/test1:latest'
        }
      }
    }

    stage('deploy') {
      steps {
        // ansiblePlaybook(credentialsId: 'aws_private_key', inventory: 'node/ansible/inventory', playbook: 'node/ansible/awsdeploy.yml')
        // sh 'ansible-playbook -i node/ansible/inventory node/ansible/awsdeploy.yml'
        withCredentials([file(credentialsId: 'aws_private_key', variable: 'aws_private_key')]) {
          // do something with the file, for instance 
          // sh 'echo $aws_private_key > private_key.pem'
          // sh 'cat private_key.pem'
          // sh 'chmod 400 private_key.pem'
          sh 'ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook -i node/ansible/inventory node/ansible/awsdeploy.yml --private-key $aws_private_key'
        }
      }
    }

    stage('cleanup') {
      steps {
        sh 'docker rmi -f jigsthegreat/test1 && docker logout'
      }
    }
  }
}

// pipeline {
//     agent { docker { image 'node:20.11.1-alpine3.19' } }
//     stages {
//         stage('build') {
//             steps {
//                 sh 'node --version'
//             }
//         }
//     }
// }